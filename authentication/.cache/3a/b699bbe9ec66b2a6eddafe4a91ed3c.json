{"id":"node_modules/react-overlays/lib/utils/addFocusListener.js","dependencies":[{"name":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/package.json","includedInParent":true,"mtime":1539692776000},{"name":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/.babelrc","includedInParent":true,"mtime":1539682095000},{"name":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/react-overlays/package.json","includedInParent":true,"mtime":1539682257000}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\nexports.default = addFocusListener;\n/**\n * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling\n * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8\n *\n * We only allow one Listener at a time to avoid stack overflows\n */\nfunction addFocusListener(handler) {\n  var useFocusin = !document.addEventListener;\n  var remove = void 0;\n\n  if (useFocusin) {\n    document.attachEvent('onfocusin', handler);\n    remove = function remove() {\n      return document.detachEvent('onfocusin', handler);\n    };\n  } else {\n    document.addEventListener('focus', handler, true);\n    remove = function remove() {\n      return document.removeEventListener('focus', handler, true);\n    };\n  }\n\n  return { remove: remove };\n}\nmodule.exports = exports['default'];","map":{"mappings":[{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/react-overlays/lib/utils/addFocusListener.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}}],"sources":{"node_modules/react-overlays/lib/utils/addFocusListener.js":"'use strict';\n\nexports.__esModule = true;\nexports.default = addFocusListener;\n/**\n * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling\n * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8\n *\n * We only allow one Listener at a time to avoid stack overflows\n */\nfunction addFocusListener(handler) {\n  var useFocusin = !document.addEventListener;\n  var remove = void 0;\n\n  if (useFocusin) {\n    document.attachEvent('onfocusin', handler);\n    remove = function remove() {\n      return document.detachEvent('onfocusin', handler);\n    };\n  } else {\n    document.addEventListener('focus', handler, true);\n    remove = function remove() {\n      return document.removeEventListener('focus', handler, true);\n    };\n  }\n\n  return { remove: remove };\n}\nmodule.exports = exports['default'];"},"lineCount":29}},"hash":"c0487b87f6fae2e501f30dc5a05500fa","cacheData":{"env":{}}}