{"id":"node_modules/idtoken-verifier/src/index.js","dependencies":[{"name":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/package.json","includedInParent":true,"mtime":1539692776000},{"name":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/.babelrc","includedInParent":true,"mtime":1539682095000},{"name":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/package.json","includedInParent":true,"mtime":1539682257000},{"name":"crypto-js/sha256","loc":{"line":1,"column":21},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/index.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/crypto-js/sha256.js"},{"name":"crypto-js/enc-base64","loc":{"line":2,"column":27},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/index.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/crypto-js/enc-base64.js"},{"name":"crypto-js/enc-hex","loc":{"line":3,"column":24},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/index.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/crypto-js/enc-hex.js"},{"name":"./helpers/rsa-verifier","loc":{"line":5,"column":26},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/index.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/helpers/rsa-verifier.js"},{"name":"./helpers/base64","loc":{"line":6,"column":21},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/index.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/helpers/base64.js"},{"name":"./helpers/jwks","loc":{"line":7,"column":19},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/index.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/helpers/jwks.js"},{"name":"./helpers/error","loc":{"line":8,"column":20},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/index.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/helpers/error.js"},{"name":"./helpers/dummy-cache","loc":{"line":9,"column":25},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/index.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/helpers/dummy-cache.js"}],"generated":{"js":"var sha256 = require('crypto-js/sha256');\nvar cryptoBase64 = require('crypto-js/enc-base64');\nvar cryptoHex = require('crypto-js/enc-hex');\n\nvar RSAVerifier = require('./helpers/rsa-verifier');\nvar base64 = require('./helpers/base64');\nvar jwks = require('./helpers/jwks');\nvar error = require('./helpers/error');\nvar DummyCache = require('./helpers/dummy-cache');\nvar supportedAlgs = ['RS256'];\n\n/**\n * Creates a new id_token verifier\n * @constructor\n * @param {Object} parameters\n * @param {String} parameters.issuer name of the issuer of the token\n * that should match the `iss` claim in the id_token\n * @param {String} parameters.audience identifies the recipients that the JWT is intended for\n * and should match the `aud` claim\n * @param {Object} [parameters.jwksCache] cache for JSON Web Token Keys. By default it has no cache\n * @param {String} [parameters.jwksURI] A valid, direct URI to fetch the JSON Web Key Set (JWKS).\n * @param {String} [parameters.expectedAlg='RS256'] algorithm in which the id_token was signed\n * and will be used to validate\n * @param {number} [parameters.leeway=0] number of seconds that the clock can be out of sync\n * while validating expiration of the id_token\n */\nfunction IdTokenVerifier(parameters) {\n  var options = parameters || {};\n\n  this.jwksCache = options.jwksCache || new DummyCache();\n  this.expectedAlg = options.expectedAlg || 'RS256';\n  this.issuer = options.issuer;\n  this.audience = options.audience;\n  this.leeway = options.leeway || 0;\n  this.__disableExpirationCheck = options.__disableExpirationCheck || false;\n  this.jwksURI = options.jwksURI;\n\n  if (this.leeway < 0 || this.leeway > 60) {\n    throw new error.ConfigurationError('The leeway should be positive and lower than a minute.');\n  }\n\n  if (supportedAlgs.indexOf(this.expectedAlg) === -1) {\n    throw new error.ConfigurationError('Algorithm ' + this.expectedAlg +\n      ' is not supported. (Expected algs: [' + supportedAlgs.join(',') + '])');\n  }\n}\n\n/**\n * @callback verifyCallback\n * @param {Error} [err] error returned if the verify cannot be performed\n * @param {boolean} [status] if the token is valid or not\n */\n\n/**\n * Verifies an id_token\n *\n * It will validate:\n * - signature according to the algorithm configured in the verifier.\n * - if nonce is present and matches the one provided\n * - if `iss` and `aud` claims matches the configured issuer and audience\n * - if token is not expired and valid (if the `nbf` claim is in the past)\n *\n * @method verify\n * @param {String} token id_token to verify\n * @param {String} [nonce] nonce value that should match the one in the id_token claims\n * @param {verifyCallback} cb callback used to notify the results of the validation\n */\nIdTokenVerifier.prototype.verify = function (token, nonce, cb) {\n  var jwt = this.decode(token);\n\n  if (jwt instanceof Error) {\n    return cb(jwt, false);\n  }\n\n  /* eslint-disable vars-on-top */\n  var headAndPayload = jwt.encoded.header + '.' + jwt.encoded.payload;\n  var signature = base64.decodeToHEX(jwt.encoded.signature);\n\n  var alg = jwt.header.alg;\n  var kid = jwt.header.kid;\n\n  var aud = jwt.payload.aud;\n  var iss = jwt.payload.iss;\n  var exp = jwt.payload.exp;\n  var nbf = jwt.payload.nbf;\n  var tnonce = jwt.payload.nonce || null;\n  /* eslint-enable vars-on-top */\n\n  if (this.issuer !== iss) {\n    return cb(new error.TokenValidationError('Issuer ' + iss + ' is not valid.'), false);\n  }\n\n  if (this.audience !== aud) {\n    return cb(new error.TokenValidationError('Audience ' + aud + ' is not valid.'), false);\n  }\n\n  if (this.expectedAlg !== alg) {\n    return cb(new error.TokenValidationError('Algorithm ' + alg +\n      ' is not supported. (Expected algs: [' + supportedAlgs.join(',') + '])'), false);\n  }\n\n  if (tnonce !== nonce) {\n    return cb(new error.TokenValidationError('Nonce does not match.'), false);\n  }\n\n  var expirationError = this.verifyExpAndNbf(exp, nbf); // eslint-disable-line vars-on-top\n\n  if (expirationError) {\n    return cb(expirationError, false);\n  }\n\n  return this.getRsaVerifier(iss, kid, function (err, rsaVerifier) {\n    if (err) {\n      return cb(err);\n    }\n    if (rsaVerifier.verify(headAndPayload, signature)) {\n      return cb(null, jwt.payload);\n    }\n    return cb(new error.TokenValidationError('Invalid signature.'));\n  });\n};\n\n/**\n * Verifies that the `exp` and `nbf` claims are valid in the current moment.\n *\n * @method verifyExpAndNbf\n * @param {String} exp value of `exp` claim\n * @param {String} nbf value of `nbf` claim\n * @return {boolean} if token is valid according to `exp` and `nbf`\n */\nIdTokenVerifier.prototype.verifyExpAndNbf = function (exp, nbf) {\n  var now = new Date();\n  var expDate = new Date(0);\n  var nbfDate = new Date(0);\n\n  if (this.__disableExpirationCheck) {\n    return null;\n  }\n\n  expDate.setUTCSeconds(exp + this.leeway);\n\n  if (now > expDate) {\n    return new error.TokenValidationError('Expired token.');\n  }\n\n  if (typeof nbf === 'undefined') {\n    return null;\n  }\n  nbfDate.setUTCSeconds(nbf - this.leeway);\n  if (now < nbfDate) {\n    return new error.TokenValidationError('The token is not valid until later in the future. ' +\n      'Please check your computed clock.');\n  }\n\n  return null;\n};\n\n/**\n * Verifies that the `exp` and `iat` claims are valid in the current moment.\n *\n * @method verifyExpAndIat\n * @param {String} exp value of `exp` claim\n * @param {String} iat value of `iat` claim\n * @return {boolean} if token is valid according to `exp` and `iat`\n */\nIdTokenVerifier.prototype.verifyExpAndIat = function (exp, iat) {\n  var now = new Date();\n  var expDate = new Date(0);\n  var iatDate = new Date(0);\n\n  if (this.__disableExpirationCheck) {\n    return null;\n  }\n\n  expDate.setUTCSeconds(exp + this.leeway);\n\n  if (now > expDate) {\n    return new error.TokenValidationError('Expired token.');\n  }\n\n  iatDate.setUTCSeconds(iat - this.leeway);\n\n  if (now < iatDate) {\n    return new error.TokenValidationError('The token was issued in the future. ' +\n      'Please check your computed clock.');\n  }\n  return null;\n};\n\nIdTokenVerifier.prototype.getRsaVerifier = function (iss, kid, cb) {\n  var _this = this;\n  var cachekey = iss + kid;\n\n  if (!this.jwksCache.has(cachekey)) {\n    jwks.getJWKS({\n      jwksURI: this.jwksURI,\n      iss: iss,\n      kid: kid\n    }, function (err, keyInfo) {\n      if (err) {\n        return cb(err);\n      }\n      _this.jwksCache.set(cachekey, keyInfo);\n      return cb(null, new RSAVerifier(keyInfo.modulus, keyInfo.exp));\n    });\n  } else {\n    var keyInfo = this.jwksCache.get(cachekey); // eslint-disable-line vars-on-top\n    cb(null, new RSAVerifier(keyInfo.modulus, keyInfo.exp));\n  }\n};\n\n\n/**\n * @typedef DecodedToken\n * @type {Object}\n * @property {Object} header - content of the JWT header.\n * @property {Object} payload - token claims.\n * @property {Object} encoded - encoded parts of the token.\n */\n\n/**\n * Decodes a well formed JWT without any verification\n *\n * @method decode\n * @param {String} token decodes the token\n * @return {DecodedToken} if token is valid according to `exp` and `nbf`\n */\nIdTokenVerifier.prototype.decode = function (token) {\n  var parts = token.split('.');\n  var header;\n  var payload;\n\n  if (parts.length !== 3) {\n    return new error.TokenValidationError('Cannot decode a malformed JWT');\n  }\n\n  try {\n    header = JSON.parse(base64.decodeToString(parts[0]));\n    payload = JSON.parse(base64.decodeToString(parts[1]));\n  } catch (e) {\n    return new error.TokenValidationError('Token header or payload is not valid JSON');\n  }\n\n  return {\n    header: header,\n    payload: payload,\n    encoded: {\n      header: parts[0],\n      payload: parts[1],\n      signature: parts[2]\n    }\n  };\n};\n\n/**\n * @callback validateAccessTokenCallback\n * @param {Error} [err] error returned if the validation cannot be performed\n * or the token is invalid. If there is no error, then the access_token is valid.\n */\n\n/**\n * Validates an access_token based on {@link http://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation}.\n * The id_token from where the alg and atHash parameters are taken,\n * should be decoded and verified before using thisfunction\n *\n * @method validateAccessToken\n * @param {String} access_token the access_token\n * @param {String} alg The algorithm defined in the header of the\n * previously verified id_token under the \"alg\" claim.\n * @param {String} atHash The \"at_hash\" value included in the payload\n * of the previously verified id_token.\n * @param {validateAccessTokenCallback} cb callback used to notify the results of the validation.\n */\nIdTokenVerifier.prototype.validateAccessToken = function (accessToken, alg, atHash, cb) {\n  if (this.expectedAlg !== alg) {\n    return cb(new error.TokenValidationError('Algorithm ' + alg +\n      ' is not supported. (Expected alg: ' + this.expectedAlg + ')'));\n  }\n  var sha256AccessToken = sha256(accessToken);\n  var hashToHex = cryptoHex.stringify(sha256AccessToken);\n  var hashToHexFirstHalf = hashToHex.substring(0, hashToHex.length / 2);\n  var hashFirstHalfWordArray = cryptoHex.parse(hashToHexFirstHalf);\n  var hashFirstHalfBase64 = cryptoBase64.stringify(hashFirstHalfWordArray);\n  var hashFirstHalfBase64SafeUrl = base64.base64ToBase64Url(hashFirstHalfBase64);\n  if (hashFirstHalfBase64SafeUrl !== atHash) {\n    return cb(new error.TokenValidationError('Invalid access_token'));\n  }\n  return cb(null);\n};\n\nmodule.exports = IdTokenVerifier;\n","map":{"mappings":[{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/idtoken-verifier/src/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}}],"sources":{"node_modules/idtoken-verifier/src/index.js":"var sha256 = require('crypto-js/sha256');\nvar cryptoBase64 = require('crypto-js/enc-base64');\nvar cryptoHex = require('crypto-js/enc-hex');\n\nvar RSAVerifier = require('./helpers/rsa-verifier');\nvar base64 = require('./helpers/base64');\nvar jwks = require('./helpers/jwks');\nvar error = require('./helpers/error');\nvar DummyCache = require('./helpers/dummy-cache');\nvar supportedAlgs = ['RS256'];\n\n/**\n * Creates a new id_token verifier\n * @constructor\n * @param {Object} parameters\n * @param {String} parameters.issuer name of the issuer of the token\n * that should match the `iss` claim in the id_token\n * @param {String} parameters.audience identifies the recipients that the JWT is intended for\n * and should match the `aud` claim\n * @param {Object} [parameters.jwksCache] cache for JSON Web Token Keys. By default it has no cache\n * @param {String} [parameters.jwksURI] A valid, direct URI to fetch the JSON Web Key Set (JWKS).\n * @param {String} [parameters.expectedAlg='RS256'] algorithm in which the id_token was signed\n * and will be used to validate\n * @param {number} [parameters.leeway=0] number of seconds that the clock can be out of sync\n * while validating expiration of the id_token\n */\nfunction IdTokenVerifier(parameters) {\n  var options = parameters || {};\n\n  this.jwksCache = options.jwksCache || new DummyCache();\n  this.expectedAlg = options.expectedAlg || 'RS256';\n  this.issuer = options.issuer;\n  this.audience = options.audience;\n  this.leeway = options.leeway || 0;\n  this.__disableExpirationCheck = options.__disableExpirationCheck || false;\n  this.jwksURI = options.jwksURI;\n\n  if (this.leeway < 0 || this.leeway > 60) {\n    throw new error.ConfigurationError('The leeway should be positive and lower than a minute.');\n  }\n\n  if (supportedAlgs.indexOf(this.expectedAlg) === -1) {\n    throw new error.ConfigurationError('Algorithm ' + this.expectedAlg +\n      ' is not supported. (Expected algs: [' + supportedAlgs.join(',') + '])');\n  }\n}\n\n/**\n * @callback verifyCallback\n * @param {Error} [err] error returned if the verify cannot be performed\n * @param {boolean} [status] if the token is valid or not\n */\n\n/**\n * Verifies an id_token\n *\n * It will validate:\n * - signature according to the algorithm configured in the verifier.\n * - if nonce is present and matches the one provided\n * - if `iss` and `aud` claims matches the configured issuer and audience\n * - if token is not expired and valid (if the `nbf` claim is in the past)\n *\n * @method verify\n * @param {String} token id_token to verify\n * @param {String} [nonce] nonce value that should match the one in the id_token claims\n * @param {verifyCallback} cb callback used to notify the results of the validation\n */\nIdTokenVerifier.prototype.verify = function (token, nonce, cb) {\n  var jwt = this.decode(token);\n\n  if (jwt instanceof Error) {\n    return cb(jwt, false);\n  }\n\n  /* eslint-disable vars-on-top */\n  var headAndPayload = jwt.encoded.header + '.' + jwt.encoded.payload;\n  var signature = base64.decodeToHEX(jwt.encoded.signature);\n\n  var alg = jwt.header.alg;\n  var kid = jwt.header.kid;\n\n  var aud = jwt.payload.aud;\n  var iss = jwt.payload.iss;\n  var exp = jwt.payload.exp;\n  var nbf = jwt.payload.nbf;\n  var tnonce = jwt.payload.nonce || null;\n  /* eslint-enable vars-on-top */\n\n  if (this.issuer !== iss) {\n    return cb(new error.TokenValidationError('Issuer ' + iss + ' is not valid.'), false);\n  }\n\n  if (this.audience !== aud) {\n    return cb(new error.TokenValidationError('Audience ' + aud + ' is not valid.'), false);\n  }\n\n  if (this.expectedAlg !== alg) {\n    return cb(new error.TokenValidationError('Algorithm ' + alg +\n      ' is not supported. (Expected algs: [' + supportedAlgs.join(',') + '])'), false);\n  }\n\n  if (tnonce !== nonce) {\n    return cb(new error.TokenValidationError('Nonce does not match.'), false);\n  }\n\n  var expirationError = this.verifyExpAndNbf(exp, nbf); // eslint-disable-line vars-on-top\n\n  if (expirationError) {\n    return cb(expirationError, false);\n  }\n\n  return this.getRsaVerifier(iss, kid, function (err, rsaVerifier) {\n    if (err) {\n      return cb(err);\n    }\n    if (rsaVerifier.verify(headAndPayload, signature)) {\n      return cb(null, jwt.payload);\n    }\n    return cb(new error.TokenValidationError('Invalid signature.'));\n  });\n};\n\n/**\n * Verifies that the `exp` and `nbf` claims are valid in the current moment.\n *\n * @method verifyExpAndNbf\n * @param {String} exp value of `exp` claim\n * @param {String} nbf value of `nbf` claim\n * @return {boolean} if token is valid according to `exp` and `nbf`\n */\nIdTokenVerifier.prototype.verifyExpAndNbf = function (exp, nbf) {\n  var now = new Date();\n  var expDate = new Date(0);\n  var nbfDate = new Date(0);\n\n  if (this.__disableExpirationCheck) {\n    return null;\n  }\n\n  expDate.setUTCSeconds(exp + this.leeway);\n\n  if (now > expDate) {\n    return new error.TokenValidationError('Expired token.');\n  }\n\n  if (typeof nbf === 'undefined') {\n    return null;\n  }\n  nbfDate.setUTCSeconds(nbf - this.leeway);\n  if (now < nbfDate) {\n    return new error.TokenValidationError('The token is not valid until later in the future. ' +\n      'Please check your computed clock.');\n  }\n\n  return null;\n};\n\n/**\n * Verifies that the `exp` and `iat` claims are valid in the current moment.\n *\n * @method verifyExpAndIat\n * @param {String} exp value of `exp` claim\n * @param {String} iat value of `iat` claim\n * @return {boolean} if token is valid according to `exp` and `iat`\n */\nIdTokenVerifier.prototype.verifyExpAndIat = function (exp, iat) {\n  var now = new Date();\n  var expDate = new Date(0);\n  var iatDate = new Date(0);\n\n  if (this.__disableExpirationCheck) {\n    return null;\n  }\n\n  expDate.setUTCSeconds(exp + this.leeway);\n\n  if (now > expDate) {\n    return new error.TokenValidationError('Expired token.');\n  }\n\n  iatDate.setUTCSeconds(iat - this.leeway);\n\n  if (now < iatDate) {\n    return new error.TokenValidationError('The token was issued in the future. ' +\n      'Please check your computed clock.');\n  }\n  return null;\n};\n\nIdTokenVerifier.prototype.getRsaVerifier = function (iss, kid, cb) {\n  var _this = this;\n  var cachekey = iss + kid;\n\n  if (!this.jwksCache.has(cachekey)) {\n    jwks.getJWKS({\n      jwksURI: this.jwksURI,\n      iss: iss,\n      kid: kid\n    }, function (err, keyInfo) {\n      if (err) {\n        return cb(err);\n      }\n      _this.jwksCache.set(cachekey, keyInfo);\n      return cb(null, new RSAVerifier(keyInfo.modulus, keyInfo.exp));\n    });\n  } else {\n    var keyInfo = this.jwksCache.get(cachekey); // eslint-disable-line vars-on-top\n    cb(null, new RSAVerifier(keyInfo.modulus, keyInfo.exp));\n  }\n};\n\n\n/**\n * @typedef DecodedToken\n * @type {Object}\n * @property {Object} header - content of the JWT header.\n * @property {Object} payload - token claims.\n * @property {Object} encoded - encoded parts of the token.\n */\n\n/**\n * Decodes a well formed JWT without any verification\n *\n * @method decode\n * @param {String} token decodes the token\n * @return {DecodedToken} if token is valid according to `exp` and `nbf`\n */\nIdTokenVerifier.prototype.decode = function (token) {\n  var parts = token.split('.');\n  var header;\n  var payload;\n\n  if (parts.length !== 3) {\n    return new error.TokenValidationError('Cannot decode a malformed JWT');\n  }\n\n  try {\n    header = JSON.parse(base64.decodeToString(parts[0]));\n    payload = JSON.parse(base64.decodeToString(parts[1]));\n  } catch (e) {\n    return new error.TokenValidationError('Token header or payload is not valid JSON');\n  }\n\n  return {\n    header: header,\n    payload: payload,\n    encoded: {\n      header: parts[0],\n      payload: parts[1],\n      signature: parts[2]\n    }\n  };\n};\n\n/**\n * @callback validateAccessTokenCallback\n * @param {Error} [err] error returned if the validation cannot be performed\n * or the token is invalid. If there is no error, then the access_token is valid.\n */\n\n/**\n * Validates an access_token based on {@link http://openid.net/specs/openid-connect-core-1_0.html#ImplicitTokenValidation}.\n * The id_token from where the alg and atHash parameters are taken,\n * should be decoded and verified before using thisfunction\n *\n * @method validateAccessToken\n * @param {String} access_token the access_token\n * @param {String} alg The algorithm defined in the header of the\n * previously verified id_token under the \"alg\" claim.\n * @param {String} atHash The \"at_hash\" value included in the payload\n * of the previously verified id_token.\n * @param {validateAccessTokenCallback} cb callback used to notify the results of the validation.\n */\nIdTokenVerifier.prototype.validateAccessToken = function (accessToken, alg, atHash, cb) {\n  if (this.expectedAlg !== alg) {\n    return cb(new error.TokenValidationError('Algorithm ' + alg +\n      ' is not supported. (Expected alg: ' + this.expectedAlg + ')'));\n  }\n  var sha256AccessToken = sha256(accessToken);\n  var hashToHex = cryptoHex.stringify(sha256AccessToken);\n  var hashToHexFirstHalf = hashToHex.substring(0, hashToHex.length / 2);\n  var hashFirstHalfWordArray = cryptoHex.parse(hashToHexFirstHalf);\n  var hashFirstHalfBase64 = cryptoBase64.stringify(hashFirstHalfWordArray);\n  var hashFirstHalfBase64SafeUrl = base64.base64ToBase64Url(hashFirstHalfBase64);\n  if (hashFirstHalfBase64SafeUrl !== atHash) {\n    return cb(new error.TokenValidationError('Invalid access_token'));\n  }\n  return cb(null);\n};\n\nmodule.exports = IdTokenVerifier;\n"},"lineCount":292}},"hash":"8874797bd0157f9f68cb0773303a5161","cacheData":{"env":{}}}