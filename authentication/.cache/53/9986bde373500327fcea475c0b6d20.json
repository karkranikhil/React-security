{"id":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","dependencies":[{"name":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/package.json","includedInParent":true,"mtime":1539692776000},{"name":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/.babelrc","includedInParent":true,"mtime":1539682095000},{"name":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/package.json","includedInParent":true,"mtime":1539682257000},{"name":"jsbn","loc":{"line":7,"column":25},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/jsbn/index.js"},{"name":"crypto-js/sha256","loc":{"line":8,"column":21},"parent":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","resolved":"/Users/karkran/Documents/nikhil personal/REACT-SECURITY/React-security/authentication/node_modules/crypto-js/sha256.js"}],"generated":{"js":"/*\nBased on the work of Tom Wu\nhttp://www-cs-students.stanford.edu/~tjw/jsbn/\nhttp://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE\n*/\n\nvar BigInteger = require('jsbn').BigInteger;\nvar SHA256 = require('crypto-js/sha256');\n\nvar DigestInfoHead = {\n  sha1: '3021300906052b0e03021a05000414',\n  sha224: '302d300d06096086480165030402040500041c',\n  sha256: '3031300d060960864801650304020105000420',\n  sha384: '3041300d060960864801650304020205000430',\n  sha512: '3051300d060960864801650304020305000440',\n  md2: '3020300c06082a864886f70d020205000410',\n  md5: '3020300c06082a864886f70d020505000410',\n  ripemd160: '3021300906052b2403020105000414'\n};\n\nvar DigestAlgs = {\n  sha256: SHA256\n};\n\nfunction RSAVerifier(modulus, exp) {\n  this.n = null;\n  this.e = 0;\n\n  if (modulus != null && exp != null && modulus.length > 0 && exp.length > 0) {\n    this.n = new BigInteger(modulus, 16);\n    this.e = parseInt(exp, 16);\n  } else {\n    throw new Error('Invalid key data');\n  }\n}\n\nfunction getAlgorithmFromDigest(hDigestInfo) {\n  for (var algName in DigestInfoHead) {\n    var head = DigestInfoHead[algName];\n    var len = head.length;\n\n    if (hDigestInfo.substring(0, len) === head) {\n      return {\n        alg: algName,\n        hash: hDigestInfo.substring(len)\n      };\n    }\n  }\n  return [];\n}\n\n\nRSAVerifier.prototype.verify = function (msg, encsig) {\n  encsig = encsig.replace(/[^0-9a-f]|[\\s\\n]]/ig, '');\n\n  var sig = new BigInteger(encsig, 16);\n  if (sig.bitLength() > this.n.bitLength()) {\n    throw new Error('Signature does not match with the key modulus.');\n  }\n\n  var decryptedSig = sig.modPowInt(this.e, this.n);\n  var digest = decryptedSig.toString(16).replace(/^1f+00/, '');\n\n  var digestInfo = getAlgorithmFromDigest(digest);\n  if (digestInfo.length === 0) {\n    return false;\n  }\n\n  if (!DigestAlgs.hasOwnProperty(digestInfo.alg)) {\n    throw new Error('Hashing algorithm is not supported.');\n  }\n\n  var msgHash = DigestAlgs[digestInfo.alg](msg).toString();\n  return (digestInfo.hash === msgHash);\n};\n\nmodule.exports = RSAVerifier;\n","map":{"mappings":[{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}}],"sources":{"node_modules/idtoken-verifier/src/helpers/rsa-verifier.js":"/*\nBased on the work of Tom Wu\nhttp://www-cs-students.stanford.edu/~tjw/jsbn/\nhttp://www-cs-students.stanford.edu/~tjw/jsbn/LICENSE\n*/\n\nvar BigInteger = require('jsbn').BigInteger;\nvar SHA256 = require('crypto-js/sha256');\n\nvar DigestInfoHead = {\n  sha1: '3021300906052b0e03021a05000414',\n  sha224: '302d300d06096086480165030402040500041c',\n  sha256: '3031300d060960864801650304020105000420',\n  sha384: '3041300d060960864801650304020205000430',\n  sha512: '3051300d060960864801650304020305000440',\n  md2: '3020300c06082a864886f70d020205000410',\n  md5: '3020300c06082a864886f70d020505000410',\n  ripemd160: '3021300906052b2403020105000414'\n};\n\nvar DigestAlgs = {\n  sha256: SHA256\n};\n\nfunction RSAVerifier(modulus, exp) {\n  this.n = null;\n  this.e = 0;\n\n  if (modulus != null && exp != null && modulus.length > 0 && exp.length > 0) {\n    this.n = new BigInteger(modulus, 16);\n    this.e = parseInt(exp, 16);\n  } else {\n    throw new Error('Invalid key data');\n  }\n}\n\nfunction getAlgorithmFromDigest(hDigestInfo) {\n  for (var algName in DigestInfoHead) {\n    var head = DigestInfoHead[algName];\n    var len = head.length;\n\n    if (hDigestInfo.substring(0, len) === head) {\n      return {\n        alg: algName,\n        hash: hDigestInfo.substring(len)\n      };\n    }\n  }\n  return [];\n}\n\n\nRSAVerifier.prototype.verify = function (msg, encsig) {\n  encsig = encsig.replace(/[^0-9a-f]|[\\s\\n]]/ig, '');\n\n  var sig = new BigInteger(encsig, 16);\n  if (sig.bitLength() > this.n.bitLength()) {\n    throw new Error('Signature does not match with the key modulus.');\n  }\n\n  var decryptedSig = sig.modPowInt(this.e, this.n);\n  var digest = decryptedSig.toString(16).replace(/^1f+00/, '');\n\n  var digestInfo = getAlgorithmFromDigest(digest);\n  if (digestInfo.length === 0) {\n    return false;\n  }\n\n  if (!DigestAlgs.hasOwnProperty(digestInfo.alg)) {\n    throw new Error('Hashing algorithm is not supported.');\n  }\n\n  var msgHash = DigestAlgs[digestInfo.alg](msg).toString();\n  return (digestInfo.hash === msgHash);\n};\n\nmodule.exports = RSAVerifier;\n"},"lineCount":78}},"hash":"c0930c463d0726277e138eb229da64a3","cacheData":{"env":{}}}